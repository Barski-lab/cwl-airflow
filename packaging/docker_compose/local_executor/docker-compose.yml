version: "3"


x-aliases:  # if it starts with x- it's ignored by docker-compose
    - &airflow_env_var
        environment:
            - AIRFLOW_HOME=/opt/airflow
            - AIRFLOW__CORE__EXECUTOR=LocalExecutor
            - AIRFLOW__CORE__SQL_ALCHEMY_CONN=mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql:3306/${MYSQL_DATABASE}
            - AIRFLOW__CORE__DAGS_FOLDER=/opt/airflow/dags
            - AIRFLOW__CORE__BASE_LOG_FOLDER=/opt/airflow/logs
            - AIRFLOW__CORE__DAG_PROCESSOR_MANAGER_LOG_LOCATION=/opt/airflow/logs/dag_processor_manager/dag_processor_manager.log
            - AIRFLOW__CORE__PLUGINS_FOLDER=/opt/airflow/plugins
            - AIRFLOW__SCHEDULER__CHILD_PROCESS_LOG_DIRECTORY=/opt/airflow/logs/scheduler
    - &airflow_volumes
        volumes:
            - ${AIRFLOW_HOME}:/opt/airflow
            - ${CWL_TMP_FOLDER}:/opt/airflow/cwl_tmp_folder
            - ${CWL_INPUTS_FOLDER}:/opt/airflow/cwl_inputs_folder
            - ${CWL_OUTPUTS_FOLDER}:/opt/airflow/cwl_outputs_folder
            - ${CWL_PICKLE_FOLDER}:/opt/airflow/cwl_pickle_folder


services:

    # starts after mysql was launched, then waits until airflow gets access to the database,
    # then runs cwl-airflow init creating all required tables in the database and starts scheduler
    scheduler:
        build: ./cwl_airflow
        container_name: scheduler
        volumes:  # can't reuse *airflow_volumes as YAML doesn't suppoer sequence merging
            - /var/run/docker.sock:/var/run/docker.sock
            - ${AIRFLOW_HOME}:/opt/airflow
            - ${CWL_TMP_FOLDER}:/opt/airflow/cwl_tmp_folder
            - ${CWL_INPUTS_FOLDER}:/opt/airflow/cwl_inputs_folder
            - ${CWL_OUTPUTS_FOLDER}:/opt/airflow/cwl_outputs_folder
            - ${CWL_PICKLE_FOLDER}:/opt/airflow/cwl_pickle_folder
        privileged: true
        restart: always
        <<: *airflow_env_var
        command: bash -c "EXIT_CODE=1 && while [ $$EXIT_CODE -ne 0 ]; do (airflow checkdb); EXIT_CODE=$$?; sleep 5; done && cwl-airflow init --upgrade && airflow scheduler"
        depends_on:
            - mysql

    # starts after scheduler was launched, then waits untill all required for airflow tables have been
    # created (we just check dag_run table) and starts webserver
    webserver:
        build: ./cwl_airflow
        container_name: webserver
        ports:
            - ${AIRFLOW_WEBSERVER_PORT}:8080
        <<: *airflow_volumes
        <<: *airflow_env_var
        restart: always
        command: bash -c "EXIT_CODE=1 && while [ $$EXIT_CODE -ne 0 ]; do (mysql -h mysql -u ${MYSQL_USER} -p${MYSQL_PASSWORD} -e 'select * from ${MYSQL_DATABASE}.dag_run'); EXIT_CODE=$$?; sleep 5; done && airflow webserver"
        depends_on:
            - scheduler  # need to start only after cwl-airflow init was run

    # starts after scheduler was launched, then waits untill all required for airflow tables have been
    # created (we just check dag_run table) and starts apiserver
    # the default API --host 127.0.0.1 won't work from inside the docker container, so we used 0.0.0.0
    apiserver:
        build: ./cwl_airflow
        container_name: apiserver
        ports:
            - ${CWL_AIRFLOW_API_PORT}:8081
        <<: *airflow_volumes        
        <<: *airflow_env_var
        restart: always
        command: bash -c "EXIT_CODE=1 && while [ $$EXIT_CODE -ne 0 ]; do (mysql -h mysql -u ${MYSQL_USER} -p${MYSQL_PASSWORD} -e 'select * from ${MYSQL_DATABASE}.dag_run'); EXIT_CODE=$$?; sleep 5; done && cwl-airflow api --host 0.0.0.0"
        depends_on:
            - scheduler  # need to start only after cwl-airflow init was run

    # starts MySQL server, creates empty ${MYSQL_DATABASE} with ${MYSQL_USER} and ${MYSQL_PASSWORD}
    mysql:
        image: mysql:5.7
        container_name: mysql
        ports:
            - ${MYSQL_PORT}:3306
        volumes:
            - ${MYSQL_DATA}:/var/lib/mysql
            - /dev/urandom:/dev/random  # Not sure if I need it at all
        restart: always
        environment:
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        command: --explicit-defaults-for-timestamp=1